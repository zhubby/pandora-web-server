[workspace]
resolver = "2"
members = [
  "pandora-web-server",
  "pandora-module-utils",
  "pandora-module-utils-macros",
  "auth-module",
  "common-log-module",
  "compression-module",
  "headers-module",
  "ip-anonymization-module",
  "response-module",
  "rewrite-module",
  "startup-module",
  "static-files-module",
  "upstream-module",
  "virtual-hosts-module",
  "examples/*",
]
default-members = [
  "pandora-web-server",
  "pandora-module-utils",
  "pandora-module-utils-macros",
  "auth-module",
  "common-log-module",
  "compression-module",
  "headers-module",
  "ip-anonymization-module",
  "response-module",
  "rewrite-module",
  "startup-module",
  "static-files-module",
  "upstream-module",
  "virtual-hosts-module",
]

[workspace.package]
rust-version = "1.74"

[workspace.dependencies]
async-trait = "0.1.42"
auth-module = { path = "auth-module", version = "0.2.0" }
bytes = "1.0"
chrono = "~0.4.31"
clap = { version = "4.5", features = ["derive"] }
common-log-module = { path = "common-log-module", version = "0.2.0" }
compression-module = { path = "compression-module", version = "0.2.0" }
env_logger = "0.9"
headers-module = { path = "headers-module", version = "0.2.0" }
http = "1.0.0"
httpdate = "1"
ip-anonymization-module = { path = "ip-anonymization-module", version = "0.2.0" }
log = "0.4"
maud = "0.26.0"
once_cell = "1.19.0"
pandora-module-utils = { path = "pandora-module-utils", version = "0.2.0" }
pandora-module-utils-macros = { path = "pandora-module-utils-macros", version = "0.2.0" }
percent-encoding = "2.1"
pingora = { git = "https://github.com/zhubby/pingora.git", branch = "0.4.0-dev" ,features = ["boringssl"] }
pingora-core = { git = "https://github.com/zhubby/pingora.git", branch = "0.4.0-dev" ,features = ["boringssl"] }
pingora-limits = { git = "https://github.com/zhubby/pingora.git", branch = "0.4.0-dev" }
response-module = { path = "response-module", version = "0.2.0" }
rewrite-module = { path = "rewrite-module", version = "0.2.0" }
serde = { version = "1.0", features = ["derive"] }
startup-module = { path = "startup-module", version = "0.2.0" }
static-files-module = { path = "static-files-module", version = "0.2.0" }
test-log = "=0.2.13"
tokio = "1"
upstream-module = { path = "upstream-module", version = "0.2.0" }
virtual-hosts-module = { path = "virtual-hosts-module", version = "0.2.0" }

[workspace.lints.clippy]
dbg_macro = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
filter_map_next = "warn"
fn_params_excessive_bools = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
linkedlist = "warn"
lint_groups_priority = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
match_on_vec_items = "warn"
mem_forget = "warn"
needless_continue = "warn"
option_option = "warn"
rest_pat_in_fully_bound_structs = "warn"
str_to_string = "warn"
suboptimal_flops = "warn"
todo = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
verbose_file_reads = "warn"

[workspace.lints.rust]
elided_lifetimes_in_paths = "deny"
explicit_outlives_requirements = "deny"
keyword_idents = { level = "deny", priority = -1 }
macro_use_extern_crate = "deny"
meta_variable_misuse = "deny"
missing_debug_implementations = "deny"
missing_docs = "warn"
non_ascii_idents = "deny"
rust_2018_idioms = { level = "deny", priority = -1 }
single_use_lifetimes = "deny"
trivial_casts = "deny"
trivial_numeric_casts = "deny"
#Rust 1.76: unit_bindings = "warn"
#Rust 1.79: unnameable_types = "warn"
unreachable_pub = "deny"
unsafe_code = "forbid"
unstable_features = "deny"
unused_import_braces = "deny"
unused_lifetimes = "deny"
unused_macro_rules = "warn"
unused_qualifications = "warn"
variant_size_differences = "deny"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true
